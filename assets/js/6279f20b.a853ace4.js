"use strict";(self.webpackChunkzero_2_hero=self.webpackChunkzero_2_hero||[]).push([[7088],{3905:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return m}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),u=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=u(e.components);return r.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),d=u(n),m=o,f=d["".concat(c,".").concat(m)]||d[m]||p[m]||a;return n?r.createElement(f,i(i({ref:t},s),{},{components:n})):r.createElement(f,i({ref:t},s))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=d;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var u=2;u<a;u++)i[u]=n[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},7009:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return c},metadata:function(){return u},toc:function(){return s},default:function(){return d}});var r=n(7462),o=n(3366),a=(n(7294),n(3905)),i=["components"],l={sidebar_position:5},c=void 0,u={unversionedId:"machine-learning/Projects/NLP/video-to-text",id:"machine-learning/Projects/NLP/video-to-text",isDocsHomePage:!1,title:"video-to-text",description:"Introduction",source:"@site/docs/machine-learning/Projects/NLP/video-to-text.md",sourceDirName:"machine-learning/Projects/NLP",slug:"/machine-learning/Projects/NLP/video-to-text",permalink:"/zero2hero/docs/machine-learning/Projects/NLP/video-to-text",editUrl:"https://github.com/sliit-foss/zero2hero/edit/master/docs/machine-learning/Projects/NLP/video-to-text.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"stt-using-ibm-cloud",permalink:"/zero2hero/docs/machine-learning/Projects/NLP/stt-using-ibm-cloud"},next:{title:"Language-Translation",permalink:"/zero2hero/docs/machine-learning/Projects/NLP/Language-Translation"}},s=[{value:"Introduction",id:"introduction",children:[],level:2}],p={toc:s};function d(e){var t=e.components,n=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"introduction"},"Introduction"),(0,a.kt)("p",null,"In this tutorial, we will use IBM Cloud to convert video to text."),(0,a.kt)("h1",{id:"code"},"Code"),(0,a.kt)("p",null,"First we need to install the IBM Watson SDK for Python."),(0,a.kt)("p",null,"To do that use,"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-py"},"!pip install ibm_watson\n!brew install ffmpeg\n\nimport subprocess\nfrom ibm_watson import SpeechToTextV1\nfrom ibm_watson.websocket import RecognizeCallback, AudioSource\nfrom ibm_cloud_sdk_core.authenticators import IAMAuthenticator\n")),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Then we need to goto IBM cloud and get our credentials.")),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://cloud.ibm.com/"},"https://cloud.ibm.com/")," Follow this link and Register first if you don't have."),(0,a.kt)("ol",{start:2},(0,a.kt)("li",{parentName:"ol"},"Then go to manage where the credentials are.")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-py"},"apikey = ''\nurl = ''\n")),(0,a.kt)("ol",{start:3},(0,a.kt)("li",{parentName:"ol"},"First we need to extract audio")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-py"},"command = 'ffmpeg -i aiml.mkv -ab 160k -ar 44100 -vn audio.wav'\nsubprocess.call(command, shell=True)\n\n# Setup service\nauthenticator = IAMAuthenticator(apikey)\nstt = SpeechToTextV1(authenticator=authenticator)\nstt.set_service_url(url)\n")),(0,a.kt)("ol",{start:4},(0,a.kt)("li",{parentName:"ol"},"Open audio Source and Convert")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-py"},"with open('audio.wav', 'rb') as f:\n    res = stt.recognize(audio=f, content_type='audio/wav', model='en-AU_NarrowbandModel', continuous=True).get_result()\n")),(0,a.kt)("ol",{start:5},(0,a.kt)("li",{parentName:"ol"},"Process Result and Output to Text")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-py"},"text = [result['alternatives'][0]['transcript'].rstrip() + '.\\n' for result in res['results']]\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-py"},"text = [para[0].title() + para[1:] for para in text]\ntranscript = ''.join(text)\nwith open('output.txt', 'w') as out:\n    out.writelines(transcript)\n\ntranscript\n")))}d.isMDXComponent=!0}}]);